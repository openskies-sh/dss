apiVersion: v1
kind: Namespace
metadata:
  name: test

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app
  namespace: test
  labels:
    app: test-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      containers:
        - name: nginx
          image: public.ecr.aws/nginx/nginx:1.21
          ports:
            - name: http
              containerPort: 80
          imagePullPolicy: IfNotPresent
      nodeSelector:
        kubernetes.io/os: linux

---
apiVersion: v1
kind: Service
metadata:
  name: test-service
  namespace: test
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ${certificate_arn}
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: '443'
    service.beta.kubernetes.io/aws-load-balancer-eip-allocations: ${join(",", eip_alloc_ids)}
    service.beta.kubernetes.io/aws-load-balancer-name: ${loadbalancer_name}
    service.beta.kubernetes.io/aws-load-balancer-subnets: ${join(",", subnet_ids)}
spec:
  selector:
    app: test-app
  ports:
    - port: 443
      targetPort: 80
      protocol: TCP
      name: http
  type: LoadBalancer
  loadBalancerClass: service.k8s.aws/nlb

---
apiVersion: v1
kind: Service
metadata:
  name: test-service-headless
  namespace: test
spec:
  selector:
    app: test-app
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  type: ClusterIP