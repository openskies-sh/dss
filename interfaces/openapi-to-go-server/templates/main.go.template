import (
    "context"
	"log"
	"net/http"
	"time"
<IMPORTS>
)

type PermissiveAuthorizer struct{}

func (*PermissiveAuthorizer) Authorize(w http.ResponseWriter, r *http.Request, schemes *map[string]<API_PACKAGE>.SecurityScheme) <API_PACKAGE>.AuthorizationResult {
  return <API_PACKAGE>.AuthorizationResult{}
}

<IMPLEMENTATIONS>

func main() {
    authorizer := PermissiveAuthorizer{}
<ROUTER_DEFS>
	s := &http.Server{
		Addr:           ":8080",
		Handler:        &multiRouter,
		ReadTimeout:    10 * time.Second,
		WriteTimeout:   10 * time.Second,
		MaxHeaderBytes: 1 << 20,
	}
	log.Fatal(s.ListenAndServe())
}
